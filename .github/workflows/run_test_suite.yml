name: Run Test Suite

on:
  workflow_call:

jobs:
  run_unit_tests:

    strategy:
      matrix:
        jax: ["stable", "none"]  # No easy way to install the latest version of jax
        torch: ["stable", "latest", "none"]
        include:
          - torch: "stable"
            jax: "stable"
            codecov: "upload"  # Upload to codecov only if we're testing both jax and torch
        exclude:
          - torch: "latest"
            jax: "stable"
          #- torch: "stable"
            #jax: "latest"
            #
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v1
      with:
        python-version: "3.10"  # Should match minium requirement of CoLA

    - name: Install pip
      run: python -m pip install --upgrade pip

    - name: (Maybe) install PyTorch
      if: ${{ matrix.torch != 'none' }}
      run: |
        if [[ ${{ matrix.torch }} == "latest" ]]; then
          python -m pip install --pre torch --index-url https://download.pytorch.org/whl/nightly/cpu;
        elif [[ ${{ matrix.torch }} == "stable" ]]; then
          python -m pip install torch --index-url https://download.pytorch.org/whl/cpu;
        fi

    - name: (Maybe) install JaX
      if: ${{ matrix.jax != 'none' }}
      run: python -m pip install "jax[cpu]"

    - name: Install CoLA and testing dependencies
      run: pip install -e ".[dev]"

    - name: Run unit tests
      run: |
        MARK="not big and not tricky"
        if [[ ${{ matrix.jax }} == "none" ]]; then
          MARK="${MARK} and not jax";
        else
          MARK="${MARK} and not numpy";
        fi
        if [[ ${{ matrix.torch }} == "none" ]]; then
          MARK="${MARK} and not torch";
        fi
        if [[ ${{ matrix.codecov || 'none' }} == "upload" ]]; then
          CODECOV_ARGS=" --cov cola --cov-report xml:cov.xml";
        else
          CODECOV_ARGS="";
        fi
        cmd="pytest -m '${MARK}' ${CODECOV_ARGS} tests/"
        echo $cmd
        eval $cmd

    - name: Upload coverage report to codecov
      if: ${{ matrix.codecov == 'upload' }}
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./cov.xml
        name: codecov-umbrella
        verbose: true
